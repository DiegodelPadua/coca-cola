1.   O que é um repositório no Git e qual a sua importância?

Um repositório no Git é tipo a “caixa” onde fica seu projeto junto com todo o histórico dele.
Ele é importante porque guarda as versões, deixa você voltar atrás se der ruim e facilita trampar junto com outras pessoas sem bagunça.

2.   Qual a função do Git Bash?

o Git Bash é a ferramenta que você abre pra “conversar” com o Git usando comandos, já que ele não tem interface gráfica própria.

3.   O que faz o comando git add e qual a diferença entre git add <arquivo> e git add .?

git add <arquivo> = escolhe na mão.
git add . = manda tudo de uma vez.

4.    Por que utilizamos o ponto (.) no comando git add .?

O ponto (.) no git add . significa “a pasta atual e tudo que tem dentro dela”.

5.   Explique o comando git commit e por que é importante criar uma mensagem descritiva.

O git commit serve pra salvar de vez as mudanças que você colocou com o git add. É tipo bater o martelo: agora essas alterações entram oficialmente no histórico do projeto.

6.    Qual a função do comando git push?

O git push serve pra enviar os commits que você fez no seu computador (local) para o repositório remoto, tipo no GitHub ou GitLab.
Sem o git push, as mudanças ficam só na sua máquina e ninguém mais consegue ver ou colaborar nelas.

7.    Qual a importância de criar commits frequentes durante o desenvolvimento de um projeto?

commits frequentes deixam o desenvolvimento mais seguro, claro e organizado.

8.    Explique a função das tags HTML e como elas estruturam uma página.

As tags HTML são os blocos de construção de uma página web. Elas dizem pro navegador o que cada parte da página é e como deve se comportar.

9.    O que são atributos em uma tag HTML e qual a sua função?

Os atributos em uma tag HTML são informações extras que você coloca dentro da tag pra dar mais detalhes ou mudar o comportamento dela.
Eles vêm dentro da tag de abertura, no formato atributo="valor".
Permitem, por exemplo, definir links, cores, tamanhos, identificadores e muito mais

10.   O que é o Emmet e como ele facilita o desenvolvimento de páginas HTML?

O Emmet é tipo um atalho turbo pra escrever HTML (e CSS) bem mais rápido.
Ele permite digitar códigos curtos e simples, que o editor expande automaticamente em blocos HTML completos.

11.   O que é o box-sizing no CSS e por que usamos ele no reset inicial?

O box-sizing no CSS é uma propriedade que define como a largura e altura de um elemento são calculadas.
Por padrão, o CSS usa content-box, que conta só o conteúdo, sem considerar padding e border.
Com box-sizing: border-box, a largura e altura passam a incluir padding e border, tornando mais fácil controlar o tamanho real do elemento.

12.   Por que é importante utilizar tags semânticas no HTML?

Usar tags semânticas no HTML é importante porque elas dizem o significado do conteúdo, não só como ele deve aparecer.
Exemplo: <header> é o cabeçalho, <footer> é o rodapé, <article> é um artigo, <nav> é menu de navegação.

13.   O que são media queries no CSS e qual a sua função?

As media queries no CSS são regras que permitem aplicar estilos diferentes dependendo do tamanho da tela ou do dispositivo.
Ou seja, com elas você consegue criar layouts responsivos, que se adaptam a celulares, tablets e desktops.

14.   Qual a função do GitHub Pages?

O GitHub Pages serve pra publicar sites direto do seu repositório do GitHub, sem precisar de servidor próprio. 

15.   O que é o Flexbox no CSS e para que ele é utilizado?

O Flexbox no CSS é um modelo de layout que facilita organizar elementos em linha ou coluna, distribuindo espaço de forma automática e responsiva.

16.   Qual a diferença entre justify-content e align-items em um container Flexbox?

No Flexbox, a diferença é assim:
justify-content → alinha os itens no eixo principal (por padrão, horizontal).
Ex.: justify-content: center; deixa os itens centralizados na linha.
align-items → alinha os itens no eixo cruzado (por padrão, vertical).
Ex.: align-items: center; deixa os itens centralizados de cima pra baixo.

17.   Como o flex-grow funciona e qual o seu propósito no layout Flexbox?

O flex-grow no Flexbox serve pra dizer quanto um item deve “crescer” em relação aos outros dentro do container.
Valor padrão: 0 → o item não cresce além do tamanho original.
Valor maior que 0 → o item expande para ocupar espaço extra disponível.
Quanto maior o número, mais espaço ele recebe comparado aos outros itens.

18.   Explique a diferença entre flex-direction: column; e flex-direction: row;.

No Flexbox, a diferença é simples:
flex-direction: row; → os itens ficam em linha (horizontalmente), da esquerda pra direita por padrão.
flex-direction: column; → os itens ficam em coluna (verticalmente), de cima pra baixo.